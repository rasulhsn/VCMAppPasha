// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VCMApp.Infrastructure.Persistence;

#nullable disable

namespace VCMApp.Infrastructure.Migrations
{
    [DbContext(typeof(VCMDbContext))]
    [Migration("20250127135547_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.Applicant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Applicants");
                });

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.ApplicantCV", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<string>("FileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.ToTable("ApplicantCVs");
                });

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.ApplicantExamAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<int>("ExamQuestionId")
                        .HasColumnType("int");

                    b.Property<int?>("SelectedExamQuestionOptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("ExamQuestionId");

                    b.HasIndex("SelectedExamQuestionOptionId");

                    b.ToTable("ApplicantExamAnswers");
                });

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.ApplicantExamResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<short>("CorrectAnswersCount")
                        .HasColumnType("smallint");

                    b.Property<short>("IncorrectAnswersCount")
                        .HasColumnType("smallint");

                    b.Property<short>("ResultPercentage")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId")
                        .IsUnique();

                    b.ToTable("ApplicantExamResults");
                });

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("ExamQuestionCount")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("SessionGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VacancyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("VacancyId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.ExamQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("QuestionPoint")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("ExamQuestions");
                });

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.ExamQuestionOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExamQuestionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<short>("PriorityNumber")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ExamQuestionId");

                    b.ToTable("ExamQuestionOptions");
                });

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.Vacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Vacancies");
                });

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.VacancyExamDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<short>("ExamQuestionCount")
                        .HasColumnType("smallint");

                    b.Property<short>("ExamQuestionTimeInMinute")
                        .HasColumnType("smallint");

                    b.Property<int>("TotalTimeOfTestInMinute")
                        .HasColumnType("int");

                    b.Property<int>("VacancyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VacancyId")
                        .IsUnique();

                    b.ToTable("VacancyExamDetails");
                });

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.VacancyExamQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExamQuestionId")
                        .HasColumnType("int");

                    b.Property<int>("VacancyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExamQuestionId");

                    b.HasIndex("VacancyId");

                    b.ToTable("VacancyExamQuestions");
                });

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.ApplicantCV", b =>
                {
                    b.HasOne("VCMApp.Infrastructure.Entities.Applicant", "Applicant")
                        .WithMany("ApplicantCVs")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.ApplicantExamAnswer", b =>
                {
                    b.HasOne("VCMApp.Infrastructure.Entities.Application", "Application")
                        .WithMany("ApplicantExamAnswers")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VCMApp.Infrastructure.Entities.ExamQuestion", "ExamQuestion")
                        .WithMany("ApplicantExamAnswers")
                        .HasForeignKey("ExamQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VCMApp.Infrastructure.Entities.ExamQuestionOption", "SelectedExamQuestionOption")
                        .WithMany()
                        .HasForeignKey("SelectedExamQuestionOptionId");

                    b.Navigation("Application");

                    b.Navigation("ExamQuestion");

                    b.Navigation("SelectedExamQuestionOption");
                });

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.ApplicantExamResult", b =>
                {
                    b.HasOne("VCMApp.Infrastructure.Entities.Application", "Application")
                        .WithOne("ApplicantExamResult")
                        .HasForeignKey("VCMApp.Infrastructure.Entities.ApplicantExamResult", "ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.Application", b =>
                {
                    b.HasOne("VCMApp.Infrastructure.Entities.Applicant", "Applicant")
                        .WithMany("Applications")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VCMApp.Infrastructure.Entities.Vacancy", "Vacancy")
                        .WithMany("Applications")
                        .HasForeignKey("VacancyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicant");

                    b.Navigation("Vacancy");
                });

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.ExamQuestion", b =>
                {
                    b.HasOne("VCMApp.Infrastructure.Entities.Category", "Category")
                        .WithMany("ExamQuestions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.ExamQuestionOption", b =>
                {
                    b.HasOne("VCMApp.Infrastructure.Entities.ExamQuestion", "ExamQuestion")
                        .WithMany("ExamQuestionOptions")
                        .HasForeignKey("ExamQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamQuestion");
                });

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.Vacancy", b =>
                {
                    b.HasOne("VCMApp.Infrastructure.Entities.Category", "Category")
                        .WithMany("Vacancies")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.VacancyExamDetail", b =>
                {
                    b.HasOne("VCMApp.Infrastructure.Entities.Vacancy", "Vacancy")
                        .WithOne("VacancyExamDetail")
                        .HasForeignKey("VCMApp.Infrastructure.Entities.VacancyExamDetail", "VacancyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vacancy");
                });

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.VacancyExamQuestion", b =>
                {
                    b.HasOne("VCMApp.Infrastructure.Entities.ExamQuestion", "ExamQuestion")
                        .WithMany("VacancyExamQuestions")
                        .HasForeignKey("ExamQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VCMApp.Infrastructure.Entities.Vacancy", "Vacancy")
                        .WithMany("VacancyExamQuestions")
                        .HasForeignKey("VacancyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamQuestion");

                    b.Navigation("Vacancy");
                });

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.Applicant", b =>
                {
                    b.Navigation("ApplicantCVs");

                    b.Navigation("Applications");
                });

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.Application", b =>
                {
                    b.Navigation("ApplicantExamAnswers");

                    b.Navigation("ApplicantExamResult")
                        .IsRequired();
                });

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.Category", b =>
                {
                    b.Navigation("ExamQuestions");

                    b.Navigation("Vacancies");
                });

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.ExamQuestion", b =>
                {
                    b.Navigation("ApplicantExamAnswers");

                    b.Navigation("ExamQuestionOptions");

                    b.Navigation("VacancyExamQuestions");
                });

            modelBuilder.Entity("VCMApp.Infrastructure.Entities.Vacancy", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("VacancyExamDetail")
                        .IsRequired();

                    b.Navigation("VacancyExamQuestions");
                });
#pragma warning restore 612, 618
        }
    }
}
